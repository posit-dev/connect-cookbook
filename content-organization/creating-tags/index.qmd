---
title: "Creating Tags"
---

## Problem

You need to create tags.

## Solution

Create tags, which can then be assigned to content items (see [*Assigning tags*](../assigning-tags/index.qmd)).

::: {.callout-warning}

You must have administrator privileges to create a tag.

:::

If you create a tag without specifying a parent tag, it will be created at the top level of the hierarchy.

::: {.panel-tabset group="language"}

## Python

```{.python}
from posit import connect
client = connect.Client()

response = client.post("/v1/tags", json={
    "name": "Departments",
})
```

The response contains information on the created tag.

```{.python}
>>> pl.DataFrame(response.json())
shape: (1, 5)
┌─────┬─────────────┬───────────┬──────────────────────┬──────────────────────┐
│ id  ┆ name        ┆ parent_id ┆ created_time         ┆ updated_time         │
│ --- ┆ ---         ┆ ---       ┆ ---                  ┆ ---                  │
│ str ┆ str         ┆ null      ┆ str                  ┆ str                  │
╞═════╪═════════════╪═══════════╪══════════════════════╪══════════════════════╡
│ 100 ┆ Departments ┆ null      ┆ 2024-06-20T14:25:20Z ┆ 2024-06-20T14:25:20Z │
└─────┴─────────────┴───────────┴──────────────────────┴──────────────────────┘
```

## R

```{.r}
library(connectapi)
client <- connect()

create_tag(client, "Departments")

```

The function does not return any output. To view the created tag, get the tags from the Connect server.

```{.r}
> tags <- get_tags(client)
> depts_tag <- tags$Departments
> depts_tag
Posit Connect Tag Tree (filtered)
└── Departments
```

:::

## Discussion

Tags on Connect can be nested arbitrarily deep. When creating a tag, you can specify a parent to add the new tag underneath it in the hierarchy.

::: {.panel-tabset group="language"}

## Python

Specify the parent tag with its `id`. See [Viewing Tag Information](../viewing-tag-information/index.qmd) for details.

```{.python}
from posit import connect
client = connect.Client()

# The ID of the "Departments" tag we created above.
PARENT_TAG_ID = "100"

res = client.post("/v1/tags", json={
    "name": "Administrative",
    "parent_id": PARENT_TAG_ID
})
```

The response contains information on the new tag.

```{.python}
>>> pl.DataFrame(res.json())
shape: (1, 5)
┌─────┬────────────────┬───────────┬──────────────────────┬──────────────────────┐
│ id  ┆ name           ┆ parent_id ┆ created_time         ┆ updated_time         │
│ --- ┆ ---            ┆ ---       ┆ ---                  ┆ ---                  │
│ str ┆ str            ┆ str       ┆ str                  ┆ str                  │
╞═════╪════════════════╪═══════════╪══════════════════════╪══════════════════════╡
│ 200 ┆ Administrative ┆ 100       ┆ 2024-06-20T14:27:22Z ┆ 2024-06-20T14:27:22Z │
└─────┴────────────────┴───────────┴──────────────────────┴──────────────────────┘
```

## R

Pass an object representing the parent tag to the `parent` argument of `create_tag()`. See [Viewing Tag Information](../viewing-tag-information/index.qmd) for details.

```{.r}
library(connectapi)
client <- connect()

tags <- get_tags(client)
depts_tag <- tags$Departments

create_tag(client, name = "Administrative", parent = depts_tag)
```

The `create_tag()` function does not return anything. Get the tags from Connect again to view the new tag tree.

```{.r}
> tags <- get_tags(client)
> depts_tag <- tags$Departments
> depts_tag
Posit Connect Tag Tree (filtered)
Departments
└── Administrative
> admin_tag <- tags$Departments$Administrative
> admin_tag
Posit Connect Tag Tree (filtered)
└── Administrative
```

:::
