---
title: Recipe Title
---

## Problem

[Describe what the recipe does or set up the problem the user can solve with it, e.g., "You need to assign tags to content on your Connect server" or "You want to organize content on Connect."]

## Solution

[If the workflow is common between Python and R, describe it outside language tabs.]

This recipe requires the following inputs:

1. e.g. "The unique identifier (GUID) of the content you wish to modify." Link to other recipes if they generate the inputs, e.g. generating a tag.

This recipe then does the following:

1. e.g. "Modifies the tags for the provided content item.

:::{.panel-tabset group="language"}

## Python

[Describe the language-specific parts of the workflow inside language tabs, e.g. "This recipe requires the identifier of the tag you wish to use"]

```{.python}
# Notes to recipe writer:
# - Include comments where appropriate. If comments are longer than a line
#   or two, you can break up the code block.
# - Include the imports and client creation at the top of the workflow.

from posit import connect

client = connect.Client()

# Note to recipe writer: if user input is required, use this format,
# and use all-caps variable names for input the user must provide.

#### User-defined inputs ####
# 1. Specify xyz. Any clarifying text and what the default value is (if any).
ABC = "154bd2af-e8fa-4aa4-aab8-dcef701f4af9"
# 2. Specify abc. Any clarifying text and what the default value is (if any).
XYZ = "23"
#############################

new_var = do_something(ABC, XYZ)
output_df = function(ABC, new_var)

```

[Describe the output, e.g. "The recipe produces a data frame of outputs." When displaying outputs, display the output from an interactive session.]

```{.python}
>>> output_df
[output printout]
```

## R

```{.r}
# Notes to recipe writer:
# - Include comments where appropriate. If comments are longer than a line
#   or two, you can break up the code block.
# - Include the imports and client creation at the top of the workflow.

library(connectapi)

client <- connect()

# Note to recipe writer: if user input is required, use this format,
# and use all-caps variable names for input the user must provide.

#### User-defined inputs ####
# 1. Specify xyz. Any clarifying text and what the default value is (if any).
ABC <- "154bd2af-e8fa-4aa4-aab8-dcef701f4af9"
# 2. Specify abc. Any clarifying text and what the default value is (if any).
XYZ <- "23"
#############################

new_var <- do_something(ABC, XYZ)
output_df <- function(ABC, new_var)

```

[Describe the output, e.g. "The recipe produces a data frame of outputs." When displaying outputs, display the output from an interactive session.]

```{.r}
> output_df
[1] "xyz"
```

:::

### [Optional additional subheadings, e.g. Deploy a dashboard to monitor usage]

[Some recipes may have additional sections. These might have more language blocks. They might describe other related workflows, or provide supplemental material like tashboards to deploy.]

E.g. Here's a dashboard or something else that deploy or do.

:::{.panel-tabset group="language"}

## Python

```{.python}
hello_world()
```

## R

```{.r}
hello_world()
```

:::

## [Optional] Discussion

Optionally give more detail on the subject at hand.

## [Optional] See also

Optionally link to other sections of the Posit Connect documentation.

